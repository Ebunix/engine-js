add_library(corejs
    corejs.cpp)
    
add_compile_definitions(V8_COMPRESS_POINTERS)
add_compile_definitions(V8_31BIT_SMIS_ON_64BIT_ARCH)

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
target_link_libraries(corejs Threads::Threads)
target_link_libraries(corejs ${CMAKE_DL_LIBS})

target_include_directories(corejs PUBLIC "${PROJECT_BINARY_DIR}" "${CMAKE_SOURCE_DIR}/v8/v8/include")

# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/libc++.so)
target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_monolith.a)
target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_libbase.a)
target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_libplatform.a)

# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libcppgc_base.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libfuzzer_support.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libinspector_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libjson_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libmulti_return_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libparser_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libregexp_builtins_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libregexp_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libtorque_base.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libtorque_generated_definitions.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libtorque_generated_initializers.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libtorque_ls_base.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_base_without_compiler.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_bigint.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_compiler.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_compiler_opt.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_cppgc_shared.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_init.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_initializers.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_libbase.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_libplatform.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libv8_snapshot.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libwasm_async_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libwasm_code_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libwasm_compile_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libwasm_fuzzer.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/lib_wasm_fuzzer_common.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libwasm_test_common.a)
# target_link_libraries(corejs ${CMAKE_SOURCE_DIR}/v8/v8/out.gn/x64.release/obj/libwee8.a)
